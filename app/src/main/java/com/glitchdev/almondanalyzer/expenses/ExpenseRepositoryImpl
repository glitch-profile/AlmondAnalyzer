package com.glitchdev.almondanalyzer.core.data.repository

import com.glitchdev.almondanalyzer.core.data.db.Expense
import com.glitchdev.almondanalyzer.core.data.db.ExpenseDao

class ExpenseRepositoryImpl(
    private val expenseDao: ExpenseDao
) : ExpenseRepository {

    private val cachedExpenses = mutableListOf<Expense>()

    override suspend fun getAllExpenses(): List<Expense> {
        val fromDb = expenseDao.getAllExpenses()
        cachedExpenses.clear()
        cachedExpenses.addAll(fromDb)
        return fromDb
    }

    override suspend fun insertExpense(expense: Expense) {
        expenseDao.insertExpense(expense)
        cachedExpenses.add(expense)
    }

    override suspend fun deleteExpense(expense: Expense) {
        expenseDao.deleteExpense(expense)
        cachedExpenses.remove(expense)
    }

    override suspend fun updateExpense(expense: Expense) {
        expenseDao.updateExpense(expense)
        val index = cachedExpenses.indexOfFirst { it.id == expense.id }
        if (index >= 0) cachedExpenses[index] = expense
    }

    override fun getCachedExpenses(): List<Expense> = cachedExpenses
}